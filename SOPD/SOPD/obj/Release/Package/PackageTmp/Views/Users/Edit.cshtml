@model SOPD.Models.EditAccountViewModel

@{
    ViewBag.Title = "Edytuj dane użytkownika";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edytuj dane użytkownika</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.NewUser.Id)
        @Html.HiddenFor(model => model.NewUser.PasswordHash)
        @Html.HiddenFor(model => model.NewUser.SecurityStamp)

        <div class="form-group">
            @Html.LabelFor(model => model.NewUser.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewUser.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewUser.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewUser.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewUser.OrganizationalUnitID, "OrganizationalUnitID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.NewUser.OrganizationalUnitID, (IEnumerable<SelectListItem>)ViewBag.UnitIDs," ", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NewUser.OrganizationalUnitID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewUser.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewUser.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewUser.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewUser.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

        <div class="form-group">
            @Html.LabelFor(model => model.NewUser.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewUser.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NewUser.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-10" style="margin-left:100px">
                <ul>
                    @foreach (var g in Model.AllRoles)
                {
                        <li>
                            <input type="checkbox"
                                   name="RolesNames"
                                   value="@g.Name" id="@g.Name"
                                   @{if (Model.RolesNames.Contains(g.Name)) { <text> checked='checked' </text>   } } />
                            <label for="@g.Name">@g.Name</label>
                        </li>
    }
                </ul>
            </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-success" />
            </div>
        </div>
    </div>
 </div>
}

<div>
    @Html.ActionLink("Powrót do listy", "Index",null,new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
