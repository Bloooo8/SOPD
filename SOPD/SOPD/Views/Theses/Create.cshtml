@model SOPD.Models.Thesis

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Thesis</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EnglishTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EnglishTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EnglishTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EnglishAbstract, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EnglishAbstract, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EnglishAbstract, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.KeyWords, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KeyWords, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KeyWords, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EnglishKeyWords, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EnglishKeyWords, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EnglishKeyWords, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.Identity.IsAuthenticated)
    {
        if (ViewBag.SelectedPromoterID != null)
        {
            @Html.HiddenFor(model => model.PromoterID, new { Value = ViewBag.SelectedPromoterID })
        }
        else
         if (!User.IsInRole("Promotor"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.PromoterID, "PromoterID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PromoterID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PromoterID, "", new { @class = "text-danger" })
                </div>
            </div>
        }
    }

    <div class="form-group">
        @Html.LabelFor(model => model.OrganizationalUnitID, "OrganizationalUnitID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("OrganizationalUnitID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OrganizationalUnitID, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (User.Identity.IsAuthenticated)
    {
        if (!User.IsInRole("Dyplomant"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ReviewerID, "ReviewerID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ReviewerID", null, " ", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ReviewerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="CreateProposition" class="btn btn-default" />
                </div>
            </div>
        }
    }



</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
